#!/usr/bin/env bash
set -euo pipefail

# Config file

config_file="conf/config.yaml"

# Ensure the environment is activated

REQUIRED_ENV="code-as-data"

if [[ $(basename "${CONDA_PREFIX}") != "${REQUIRED_ENV}" ]]; then
  echo "Retry with CONDA env '${REQUIRED_ENV}'" >&2
  exit 1
fi

###############################################################################

# Helper functions

yaml_value() {
  # args: yaml-file, fieldname
  # extracts the field from the yaml file
  cat "${1}" | shyaml get-value "${2}"
}

###############################################################################

n_cores="$(yaml_value "${config_file}" "cores")"

# Input data for the project
task_view_url="$(yaml_value "${config_file}" "task_view_url")"

# Files constructed by the called scripts
cran_table="$(yaml_value "${config_file}" "cran_details_file")"
repo_details="$(yaml_value "${config_file}" "repo_details_file")"

# Parent directories for package-specific:
# - local-storage of the github repos
repo_dir="$(yaml_value "${config_file}" "repo_dir")"

###############################################################################

# Run each step of the analysis:

Rscript "scripts/01-get-devtools-cran-table.R" \
  --config "${config_file}" \
  --url "${task_view_url}" \
  --output "${cran_table}"

Rscript "scripts/02-github-details.R" \
  --input "${cran_table}" \
  --repo_dir "${repo_dir}" \
  --output "${repo_details}"

# Clone all repos, run & collapse gitsum / cloc / dupree analysis over all
# packages

snakemake --snakefile ./Snakefile --cores=${n_cores}

###############################################################################

# Make the report

echo "TODO: compile an Rmarkdown report of the results" >&2

###############################################################################
